/// <reference types="react" />
import { CSSProperties } from "react";
type SpinnerProps = React.HTMLAttributes<SVGElement> & {
    color: CSSProperties["color"];
    enabled: boolean;
    speed: number;
    still: boolean;
    thickness: number;
    size: CSSProperties["width"];
    style: CSSProperties;
};
type SpinnerCircularProps = SpinnerProps;
declare const SpinnerCircular: {
    ({ color, enabled, size, speed, still, thickness, style, ...svgProps }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerCircularFixedProps = SpinnerProps;
declare const SpinnerCircularFixed: {
    ({ color$0, enabled$0, size$0, speed$0, still$0, thickness$0, style$0, ...svgProps$0 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerCircularSplitProps = SpinnerProps;
declare const SpinnerCircularSplit: {
    ({ color$1, enabled$1, size$1, speed$1, still$1, thickness$1, style$1, ...svgProps$1 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerInfinityProps = SpinnerProps;
declare const SpinnerInfinity: {
    ({ color$2, enabled$2, size$2, speed$2, still$2, thickness$2, style$2, ...svgProps$2 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerDottedProps = SpinnerProps;
declare const SpinnerDotted: {
    ({ color$3, enabled$3, size$3, speed$3, still$3, thickness$3, style$3, ...svgProps$3 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerRoundProps = SpinnerProps;
declare const SpinnerRound: {
    ({ color$4, enabled$4, size$4, speed$4, still$4, thickness$4, style$4, ...svgProps$4 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerRoundOutlinedProps = SpinnerProps;
declare const SpinnerRoundOutlined: {
    ({ color$5, enabled$5, size$5, speed$5, still$5, thickness$5, style$5, ...svgProps$5 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerRoundFilledProps = SpinnerProps;
declare const SpinnerRoundFilled: {
    ({ color$6, enabled$6, size$6, speed$6, still$6, thickness$6, style$6, ...svgProps$6 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
type SpinnerRombProps = SpinnerProps;
declare const SpinnerRomb: {
    ({ color$7, enabled$7, size$7, speed$7, still$7, thickness$7, style$7, ...svgProps$7 }: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        still: boolean;
        size: number;
        speed: number;
        thickness: number;
        style: {};
    };
};
export { SpinnerCircularProps, SpinnerCircular, SpinnerCircularFixedProps, SpinnerCircularFixed, SpinnerCircularSplitProps, SpinnerCircularSplit, SpinnerInfinityProps, SpinnerInfinity, SpinnerDottedProps, SpinnerDotted, SpinnerRoundProps, SpinnerRound, SpinnerRoundOutlinedProps, SpinnerRoundOutlined, SpinnerRoundFilledProps, SpinnerRoundFilled, SpinnerRombProps, SpinnerRomb };
